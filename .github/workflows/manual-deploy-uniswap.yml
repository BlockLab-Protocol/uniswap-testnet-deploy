# Deploys Uniswap on Azure for Testnet
# Builds the Uniswap network image, pushes the image to dockerhub and starts the Uniswap on azure
#
# It exposes the following ports:
# HTTP:       80,
#
# Exposes the following addresses: (only accessible internally)
#  testnet-uniswap.uksouth.azurecontainer.io

name: '[M] Deploy Uniswap'

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: obscuronet/uniswap_testnet:latest
          file: ./Dockerfile

      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: testnet-uniswap
          image: obscuronet/uniswap_testnet:latest
          name: testnet-uniswap
          location: 'uksouth'
          restart-policy: 'Never'
          # It seems that running the command automatically causes the container to crash
          # The whole pipeline of logs needs to be created to properly debug this
          # For now the workaround is to ssh into the container and run the execute command
          command-line: echo './deploy.sh --pk_string=${{ secrets.FAUCET_PK_STRING }} --addr=${{ secrets.FAUCET_ADDR }}' > execute.sh ; tail -f /dev/null
          ports: '80'
          cpu: 4
          memory: 16


